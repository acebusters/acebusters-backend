language: node_js

env:
  global:
    # AWS_SANDBOX_KEY_ID, AWS_SANDBOX_KEY, AWS_STAGING_KEY_ID, AWS_STAGING_KEY
    - secure: P6Nel0E9JIMff+mOno0U3bkH/JlRcevYG7wtI+u66wriAiVWRZCHEtoY3DW89Y2mVE20ojg3tZ8UUAhKOByuIKZo5jUzrVbsvgadClED06MFYg46jOpMuihsjYCHzgeasF81tzkoRBmkcNAtpsaQ4H1q/ZQQ8RbQ7pLcgGHUnFrmfpj/QEyefdFeS/GL9P3JNZ9QMwNtt8wJOYjM2vBm13RZ0QrCpxiSTHHrutag4+4hjUEYHydBC0nTltxAFbOunNNiWUosqwpBo7R7UmIx7mptR+8Obqc7sWqNn+bzFGDa6OVW9gHYNcPNLQXlGYt68v7wmpdYKTtTHwEJpIMy8Q==
    - BUILDS_BUCKET=s3://builds.acebusters
    # Lambda settings
    - AWS_ROLE_ARN=arn:aws:iam::105751009136:role/lambda_api_dynamo
    - AWS_REGION=eu-west-1
    - AWS_FUNCTION_NAME=poker
    - AWS_HANDLER=index.handler
    - AWS_MEMORY_SIZE=128
    - AWS_TIMEOUT=7
    - AWS_RUNTIME=nodejs6.10

node_js:
  - "6.10"

install:
  - npm install -g node-lambda
  - sudo apt-get install zip

build:
  ci:
    - echo $BUILD_URL
    - npm --version
    - npm install
    - npm test

  post_ci:
    - npm run package
    - AWS_ACCESS_KEY_ID=$AWS_STAGING_KEY_ID AWS_SECRET_ACCESS_KEY=$AWS_STAGING_KEY aws s3 cp lambda.zip $BUILDS_BUCKET/sandbox/oracle.zip
    - if [ "$BRANCH" == "develop" ]; then echo "Deploying to Sandbox"; node-lambda deploy -a $AWS_SANDBOX_KEY_ID -s $AWS_SANDBOX_KEY -o $AWS_ROLE_ARN -r $AWS_REGION -n $AWS_FUNCTION_NAME -H $AWS_HANDLER -m $AWS_MEMORY_SIZE -t $AWS_TIMEOUT -u $AWS_RUNTIME -z lambda.zip; fi

integrations:

  notifications:
    - integrationName: slack_chainfish
      type: slack
      recipients:
        - "#ci"
      branches:
        only:
          - master
          - develop
      on_success: change
      on_failure: always
      on_start: never
